例子实验记录：
~/flann/examples

g++ flann_example.cpp -I ~/flann/src/cpp -o flann_example_cpp
会报错，和hdf5有关的函数都没有具体实现

hdf5已经装在了 /usr/local/bin内，怎么用
是软链接，真正的位置在：/usr/local/cellar/hdf5/1.8.18



用那个flann_example.c文件试一试：
gcc flann_example.c -I ~/flann/src/cpp -o flann_example_c
"_DEFAULT_FLANN_PARAMETERS", referenced from:
      _main in flann_example-a30921.o
  "_flann_build_index", referenced from:
      _main in flann_example-a30921.o
  "_flann_find_nearest_neighbors_index", referenced from:
      _main in flann_example-a30921.o
  "_flann_free_index", referenced from:
      _main in flann_example-a30921.o
这些函数没有实现
看flann/flann.h
吧flann.cpp编译一下，再连起来试试
gcc -c flann.cpp -I ~/flann/src/cpp
编译半分钟flann.o 有14M！！

尝试这个
gcc flann_example.c ../src/cpp/flann/flann.o -I ~/flann/src/cpp -o flann_example_c
一堆的函数没有实现。。

要用makefile了

最后在~/flann/build/bin中发现例子的二进制，原来已经编译好了。
运行，文件打不开。也许是路径原因？？
修改源代码中的路径，重建，还是不行，打不开文件
不是路径的原因，数据文件放在程序当前目录即可
那是什么原因?
??
可能要改成rb模式读取？不是的，try.c中也是用r读取的
看了一下cpp是可以的
把文件路径改回来，好了。。
搞不明白。。真折腾



























手动编译的正确方法：
mex -L/Users/dsinai/flann/build/lib -lflann -I/Users/dsinai/flann/src/cpp nearest_neighbors.cpp

  /////////MATLAB BINDING/////////////////
 //                                    //
////////////////////////////////////////
关于MATLAB的一些记录
源码文件列表：
  -rwxrwxrwx   1 root    staff     3318 Feb  5 15:29 CMakeLists.txt
  -rw-rw-rw-@  1 dsinai  staff  3149994 May  4 11:09 dataset.dat			测试数据文件
  -rw-rw-rw-   1 root    staff     2299 Feb  5 15:29 flann_build_index.m
  -rw-rw-rw-   1 root    staff     1614 Feb  5 15:29 flann_free_index.m
  -rw-rw-rw-   1 root    staff     1578 Feb  5 15:29 flann_load_index.m
  -rw-rw-rw-   1 root    staff     1563 Feb  5 15:29 flann_save_index.m
  -rw-rw-rw-   1 root    staff     3564 Feb  5 15:29 flann_search.m
  -rw-rw-rw-   1 root    staff     1914 Feb  5 15:29 flann_set_distance_type.m
  -rw-rw-rw-   1 root    staff    23396 Feb  5 15:29 nearest_neighbors.cpp
  -rwxr-xr-x   1 dsinai  staff    25140 May 16 10:22 nearest_neighbors.mexmaci64	需要生成的目标文件
  -rw-r--r--@  1 dsinai  staff      349 May 15 21:35 test1.m
  -rw-rw-rw-   1 root    staff    10328 Feb  5 15:29 test_flann.m
  -rw-rw-rw-@  1 dsinai  staff   350956 May  4 11:09 testset.dat			测试数据文件
  -rw-r--r--   1 dsinai  staff      424 May 15 22:04 texput.log				不知道什么日志文件


手动编译matlab接口的正确方法：
cd ~/flann/src/matlab
mex -L/Users/dsinai/flann/build/lib -lflann -I/Users/dsinai/flann/src/cpp nearest_neighbors.cpp
//////首先要有mex
//////运行 mex -setup C++
//////Warning: Xcode is installed, but its license has not been accepted. Run Xcode and accept its license
//////注意到Xcode commandline tool 是不行的，备份中恢复了Xcode-beta
//////仍然报错，心态崩了，上网找，有个建议要用Xcode7而不是Xcode-beta7,
//////找到apple开发者项目（之前的版本只有这里可以下载）下载并重装Xcode 7
//////重装以后成功
然后运行test_flann.m
>> test_flann
Test 1: Load data...done (0.705318 sec) : PASSED
Test 2: Linear search...done (0.951022 sec) : PASSED
Test 3: kd-tree search...done (0.188179 sec) : PASSED
Test 4: k-means search...done (0.395198 sec) : PASSED
Test 5: composite search...done (0.831868 sec) : PASSED
Test 6: search with autotune...done (92.2014 sec) : FAILED!!!!!!!!!
Test 7: index kd-tree search...done (0.198178 sec) : PASSED
Test 8: index kmeans search...done (0.387723 sec) : PASSED
Test 9: index kmeans search gonzales...done (1.30157 sec) : PASSED
Test 10: index kmeans search kmeanspp...done (0.470573 sec) : PASSED
Test 11: index composite search...done (0.876383 sec) : PASSED
Test 12: index autotune search...done (95.846 sec) : PASSED
-----------------
Passed: 11/12
Failed: 1/12
>> test_flann
Test 1: Load data...done (0.702786 sec) : PASSED
Test 2: Linear search...done (0.842456 sec) : PASSED
Test 3: kd-tree search...done (0.192624 sec) : PASSED
Test 4: k-means search...done (0.349267 sec) : PASSED
Test 5: composite search...done (0.932109 sec) : PASSED
Test 6: search with autotune...done (92.4067 sec) : PASSED
Test 7: index kd-tree search...done (0.184209 sec) : PASSED
Test 8: index kmeans search...done (0.350348 sec) : PASSED
Test 9: index kmeans search gonzales...done (1.15812 sec) : PASSED
Test 10: index kmeans search kmeanspp...done (0.464189 sec) : PASSED
Test 11: index composite search...done (0.860628 sec) : PASSED
Test 12: index autotune search...done (99.2792 sec) : PASSED
-----------------
Passed: 12/12
Failed: 0/12
>>
有成功也有可能失败


  /////////LSH METHOD/////////////////////
 //                                    //
////////////////////////////////////////
需要知道cmakefile的作用。
把flann/src/cpp 的源码复制到了/usr/local/include
把build之后的lib复制到了/usr/local/lib
仍然不行
用homebrew 在文件数的标准位置安装了flann库（考虑到两个库位置不同，不会冲突）
库的位置 /usr/local/Cellar/flann/ 以及 /usr/local/lib(这个好像是我手动复制的，真的lib在库的目录中) /usr/local/include

以下的命令是第一个成功编译的通过引用库得到的可执行文件！
clang++ copyexample.cpp -I /usr/local/Cellar/flann/1.9.1_3/include -L /usr/local/Cellar/hdf5/1.10.1/lib -lhdf5 -L/usr/local/Cellar/flann/1.9.1_3/lib -lflann
不足：库是不可改的，尝试用自定义的库来编译
以下的命令是第一个通过自定义的库编译的可执行文件！
clang++ copyexample.cpp -I /Users/dsinai/flann/src/cpp -L /usr/local/Cellar/hdf5/1.10.1/lib -lhdf5 -L/Users/dsinai/flann/build/lib -lflann

研究发现flann自带的LSH方法只适用于unsigned char数据类型，对于其他类型需要添加对应的构造函数，成员函数，比如对于float类型

使用的测度不同，就没有可比性。



关于同步的理解 每次改写源代码时，只要重新make一遍，而不需要Cmake，然后再matlab里面重新mex一遍，接口函数就更新了。。




tmp::
 else if (flann_distance_type==FLANN_DIST_HAMMING_POPCNT) {
        return __flann_radius_search<HammingPopcnt<T> >(index_ptr, query, indices, dists, max_nn, radius, flann_params);
    }




